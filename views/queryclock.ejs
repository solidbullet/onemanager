<!DOCTYPE html>
<html>

<head>
  <title>壹方助残管理系统</title>
  <link href="../../lib/ligerUI/skins/Aqua/css/ligerui-all.css" rel="stylesheet" type="text/css" />
  <link href="../../lib/css/jyq.css" rel="stylesheet" media="screen">
  <script src="../../lib/jquery/jquery-1.9.0.min.js" type="text/javascript"></script>
  <script src="../../lib/ligerUI/js/ligerui.all.js" type="text/javascript"></script>
  <script src="../../lib/util/util.js"></script>

</head>
<div class="container">


  <div class="title-wrap">
    <div class="title"><img src="../../lib/images/query.png" alt=""></div>
    <div class="title">打卡查询</div>
  </div>
  <div class="query-form">
    <div class="query-wrap">
      <div class="query-type-title">服务人员姓名</div>
      <div class="query-type-input">
        <input type="text" class="input-wrap" id="real_name" autofocus>
      </div>
    </div>
    <div class="query-wrap">
      <div class="query-type-title">受助人员姓名</div>
      <div class="query-type-input">
        <input type="text" class="input-wrap" id="cus_name">
      </div>
    </div>
    <div class="query-wrap">
      <div class="query-type-title">开始日期</div>
      <div class="query-type-input">
        <input type="date" value="2020-04-20" class="input-wrap" id="startTime" />
      </div>
    </div>
    <div class="query-wrap">
      <div class="query-type-title">结束日期</div>
      <div class="query-type-input" style="border-style: solid;border-width:1px;border-color: rgb(163, 192, 232);">
        <input type="date" value="" class="input-wrap" id="endTime" />
      </div>
    </div>
  </div>
  <button class="query-button" id="myreset">重置</button>
  <button class="query-button" id="mybutton">查询</button>
  <div class="totaltime" id="totaltime"></div>
  <div id="maingrid"></div>
</div>

<script type="text/javascript">
  const [startMonth, endMonth] = formatMonth(new Date());
  $("#startTime").val(startMonth);
  $("#endTime").val(endMonth);
  $("#myreset").click(function () {
    $("#real_name").val("");
    $("#cus_name").val("");
  })


  $(function () {
    $("#real_name").val("林宇琦");
    let reqbody = {};
    let startTime = $("#startTime").val();
    let endTime = $("#endTime").val();
    let real_name = $("#real_name").val();
    reqbody.real_name = real_name;
    reqbody.cus_name = "ALL";
    reqbody.startTime = startTime;
    reqbody.endTime = endTime;
    if (real_name) {
      $.post("/getrecord", reqbody,
        function (response, status) {
          let griddata = JSON.parse(response.resp_data).data;
          let totaltime = 0;
          let temp_diff = 0;
          for (let i = 0; i < griddata.length; i++) {

            //以下计算工作时长
            let off_duty_time = griddata[i].off_duty_time;
            let on_duty_time = griddata[i].on_duty_time;

            if (on_duty_time && !off_duty_time) {
              griddata[i].timediff = '下班未打卡'
            } else {
              temp_diff = ((new Date(off_duty_time).getTime() - new Date(on_duty_time).getTime()) / 3600 / 1000).toFixed(3)  //工作时长
              griddata[i].timediff = temp_diff
            }

            //----计算工作时长结束
            console.log(griddata[i].location1)
            //以下开始计算两次打卡之间的坐标距离
            let lng1 = (griddata[i].location1) ? griddata[i].location1.coordinates[0] : null
            let lng2 = (griddata[i].location2) ? griddata[i].location2.coordinates[0] : null
            let lat1 = (griddata[i].location1) ? griddata[i].location1.coordinates[1] : null
            let lat2 = (griddata[i].location2) ? griddata[i].location2.coordinates[1] : null
            if (lng1 && lng2) {  //两个坐标都有记录
              griddata[i].coordinate = GetDistance(lat1, lng1, lat2, lng2) * 1000
            } else {
              griddata[i].coordinate = '数据缺失'
            }
            //计算两次打卡之间距离结束

            //累计工作时长

            totaltime = totaltime + parseFloat(temp_diff);

            if (griddata[i].hasOwnProperty("off_duty_time")) griddata[i].off_duty_time = formatstrTime(off_duty_time)

            if (griddata[i].hasOwnProperty("on_duty_time")) griddata[i].on_duty_time = formatstrTime(on_duty_time)

          }
          $("#totaltime").html("> 累计工作" + parseFloat(totaltime).toFixed(3) + "小时");
          let grid = $("#maingrid").ligerGrid({
            columns: [
              { name: 'real_name', display: '服务人员姓名' },
              { name: 'cus_name', display: '受助人员姓名' },
              { name: 'on_duty_time', display: '上班时间' },
              { name: 'off_duty_time', display: '下班时间' },
              { name: 'timediff', display: '工作时长' } //{ name: 'coordinate', display: '两次之间距离', width: 200 },
            ],
            data: { Rows: griddata },
            pageSize: 20,
            minColumnWidth: 200
          });
          //alert("数据: \n" + data + "\n状态: " + status);
        });
    } else alert("必须输入服务人员姓名")

  });


  $("#mybutton").click(function () {
    let reqbody = {};
    let real_name = $("#real_name").val();
    let cus_name = $("#cus_name").val();
    let startTime = $("#startTime").val();
    let endTime = $("#endTime").val();
    reqbody.real_name = real_name;
    reqbody.startTime = startTime;
    reqbody.endTime = endTime;
    reqbody.cus_name = (cus_name)?cus_name:"ALL";
    console.log(reqbody)
    if (real_name) {
      $.post("/getrecord", reqbody,
        function (response, status) {
          let griddata = JSON.parse(response.resp_data).data;
          let totaltime = 0;
          let temp_diff = 0;
          for (let i = 0; i < griddata.length; i++) {

            //以下计算工作时长
            let off_duty_time = griddata[i].off_duty_time;
            let on_duty_time = griddata[i].on_duty_time;

            if (on_duty_time && !off_duty_time) {
              griddata[i].timediff = '下班未打卡'
            } else {
              temp_diff = ((new Date(off_duty_time).getTime() - new Date(on_duty_time).getTime()) / 3600 / 1000).toFixed(3)  //工作时长
              griddata[i].timediff = temp_diff
            }

            //----计算工作时长结束
            console.log(griddata[i].location1)
            //以下开始计算两次打卡之间的坐标距离
            let lng1 = (griddata[i].location1) ? griddata[i].location1.coordinates[0] : null
            let lng2 = (griddata[i].location2) ? griddata[i].location2.coordinates[0] : null
            let lat1 = (griddata[i].location1) ? griddata[i].location1.coordinates[1] : null
            let lat2 = (griddata[i].location2) ? griddata[i].location2.coordinates[1] : null
            if (lng1 && lng2) {  //两个坐标都有记录
              griddata[i].coordinate = GetDistance(lat1, lng1, lat2, lng2) * 1000
            } else {
              griddata[i].coordinate = '数据缺失'
            }
            //计算两次打卡之间距离结束
            //累计工作时长
            totaltime = totaltime + parseFloat(temp_diff);
            if (griddata[i].hasOwnProperty("off_duty_time")) griddata[i].off_duty_time = formatstrTime(off_duty_time)
            if (griddata[i].hasOwnProperty("on_duty_time")) griddata[i].on_duty_time = formatstrTime(on_duty_time)
          }
          $("#totaltime").html("> 累计工作" + parseFloat(totaltime).toFixed(3) + "小时");
          let grid = $("#maingrid").ligerGrid({
            columns: [
              { name: 'real_name', display: '服务人员姓名' },
              { name: 'cus_name', display: '受助人员姓名' },
              { name: 'on_duty_time', display: '上班时间' },
              { name: 'off_duty_time', display: '下班时间' },
              { name: 'timediff', display: '工作时长' } //{ name: 'coordinate', display: '两次之间距离', width: 200 },
            ],
            data: { Rows: griddata },
            pageSize: 20,
            minColumnWidth: 200
          });
          //alert("数据: \n" + data + "\n状态: " + status);
        });
    } else alert("必须输入服务人员姓名")

  });

</script>
</body>

</html>